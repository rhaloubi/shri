name: Docker Image Build & Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # --- Backend Go Services ---
  build-go-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api-gateway
            image: api-gateway
          - service: services/store-management
            image: store-management
          - service: services/product-catalog
            image: product-catalog
          - service: services/order-management
            image: order-management
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Run Unit Tests with Coverage
        run: |
          cd backend-services/${{ matrix.service }}
          go mod tidy
          go test ./... -coverprofile=coverage.out -covermode=atomic
          go build -o app ./cmd/main.go

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend-services/${{ matrix.service }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest

  # --- Frontend (Next.js) ---
  build-frontend:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend-user-management
          npm install

      - name: Build Next.js app
        run: |
          cd frontend-user-management
          npm run build

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend-user-management
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-user-management:latest
