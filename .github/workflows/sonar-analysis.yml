name: CI/CD Full Pipeline

on:
  push:
    branches: [main]
    paths:
      - "backend-services/**"
      - "frontend-user-management/**"
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - folder: api-gateway
            sonar_key: api-gateway
          - folder: services/services-store-management
            sonar_key: services-store-management
          - folder: services/services-product-catalog
            sonar_key: services-product-catalog
          - folder: services/services-order-management
            sonar_key: services-order-management

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Run Unit Tests & Coverage
        run: |
          cd backend-services/${{ matrix.folder }}
          go mod tidy
          go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: SonarCloud Scan (Backend)
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.projectKey=microservices_${{ matrix.sonar_key }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd frontend-user-management
          npm install

      - name: Run Tests & Generate Coverage
        run: |
          cd frontend-user-management

      - name: SonarCloud Scan (Frontend)
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.projectKey=microservices_frontend
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=frontend-user-management
            -Dsonar.javascript.lcov.reportPaths=frontend-user-management/coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
