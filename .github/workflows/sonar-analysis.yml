name: CI/CD with SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # --- Backend Go Services Analysis ---
  analyze-go-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api-gateway
            projectKey: microservices_api-gateway
            workingDirectory: backend-services/api-gateway
          - service: services/store-management
            projectKey: microservices_store-management
            workingDirectory: backend-services/services/store-management
          - service: services/product-catalog
            projectKey: microservices_product-catalog
            workingDirectory: backend-services/services/product-catalog
          - service: services/order-management
            projectKey: microservices_order-management
            workingDirectory: backend-services/services/order-management

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25"

      - name: Run Unit Tests with Coverage
        run: |
          cd ${{ matrix.workingDirectory }}
          go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: ${{ matrix.workingDirectory }}
          args: >
            -Dsonar.projectKey=${{ matrix.projectKey }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # --- Frontend Analysis (Next.js) ---
  analyze-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend-user-management
          npm install

      - name: SonarCloud Scan (Frontend)
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: frontend-user-management
          args: >
            -Dsonar.projectKey=microservices_frontend
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
