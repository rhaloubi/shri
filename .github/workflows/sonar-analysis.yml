name: CI/CD with SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Backend Go Services Analysis
  analyze-go-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            api-gateway,
            services/store-management,
            services/product-catalog,
            services/order-management,
          ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run Unit Tests
        run: |
          cd backend-services/${{ matrix.service }}
          go test ./... -coverprofile=coverage.out

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=microservices_${{ matrix.service }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=coverage.out

  # Frontend Analysis
  analyze-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend-user-management
          npm install

      # Remove the test step since there's no test script
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=microservices_frontend
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  # Build and Deploy if all analyses pass
  build-deploy:
    needs: [analyze-go-services, analyze-frontend]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Images
        run: |
          # Build and push Go services
          for service in api-gateway store-management product-catalog order-management; do
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest ./backend-services/$service
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest
          done

          # Build and push frontend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-user-management:latest ./frontend-user-management
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-user-management:latest
